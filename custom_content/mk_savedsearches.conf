[30-Day-Log-Volume-by-sourcetype-CHINA]
action.email = 1
action.email.sendcsv = 1
action.email.sendresults = 1
action.email.to = marshall.mechler@criticalstart.com,brittany.pierson@criticalstart.com
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 0 0 * * 2
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = line
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=_internal  source=*license_usage.log* type="Usage" idx=*chn* | eval h=if(len(h)=0 OR isnull(h),"(SQUASHED)",h) | eval s=if(len(s)=0 OR isnull(s),"(SQUASHED)",s) | eval idx=if(len(idx)=0 OR isnull(idx),"(UNKNOWN)",idx) | bin _time span=1d | stats sum(b) as b by _time, pool, s, st, h, idx   | timechart span=1d sum(b) AS volumeB by st fixedrange=false  | join type=outer _time [search index=_internal   source=*license_usage.log* type="RolloverSummary" earliest=-30d@d | eval _time=_time - 43200 | bin _time span=1d | stats latest(stacksz) AS "stack size" by _time] | fields - _timediff  | foreach * [eval <<FIELD>>=round('<<FIELD>>'/1024/1024/1024, 3)]

[30-Day-Log-Volume-by-sourcetype-US]
action.email = 1
action.email.sendcsv = 1
action.email.sendresults = 1
action.email.to = marshall.mechler@criticalstart.com,brittany.pierson@criticalstart.com
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 0 0 * * 2
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = line
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=_internal source=*license_usage.log* type="Usage" NOT idx IN (*chn* *eeu*)\
| eval h=if(len(h)=0 OR isnull(h),"(SQUASHED)",h) \
| eval s=if(len(s)=0 OR isnull(s),"(SQUASHED)",s) \
| eval idx=if(len(idx)=0 OR isnull(idx),"(UNKNOWN)",idx) \
| bin _time span=1d \
| stats sum(b) as b by _time, pool, s, st, h, idx \
| timechart span=1d sum(b) AS volumeB by st fixedrange=false \
| join type=outer _time \
    [ search index=_internal source=*license_usage.log* type="RolloverSummary" earliest=-30d@d \
    | eval _time=_time - 43200 \
    | bin _time span=1d \
    | stats latest(stacksz) AS "stack size" by _time] \
| fields - _timediff \
| foreach * \
    [ eval <<FIELD>>=round('<<FIELD>>'/1024/1024/1024, 3)]

[30-Day-Log-Volume-by-sourcetype-EEU]
action.email = 1
action.email.sendcsv = 1
action.email.sendresults = 1
action.email.to = marshall.mechler@criticalstart.com,brittany.pierson@criticalstart.com
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 0 0 * * 2
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = line
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=_internal source=*license_usage.log* type="Usage" idx=*eeu*\
| eval h=if(len(h)=0 OR isnull(h),"(SQUASHED)",h) \
| eval s=if(len(s)=0 OR isnull(s),"(SQUASHED)",s) \
| eval idx=if(len(idx)=0 OR isnull(idx),"(UNKNOWN)",idx) \
| bin _time span=1d \
| stats sum(b) as b by _time, pool, s, st, h, idx \
| timechart span=1d sum(b) AS volumeB by st fixedrange=false \
| join type=outer _time \
    [ search index=_internal source=*license_usage.log* type="RolloverSummary" earliest=-30d@d \
    | eval _time=_time - 43200 \
    | bin _time span=1d \
    | stats latest(stacksz) AS "stack size" by _time] \
| fields - _timediff \
| foreach * \
    [ eval <<FIELD>>=round('<<FIELD>>'/1024/1024/1024, 3)]

